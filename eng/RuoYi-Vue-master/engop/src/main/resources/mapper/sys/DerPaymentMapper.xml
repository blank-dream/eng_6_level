<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eng.sys.mapper.DerPaymentMapper">
    
    <resultMap type="DerPayment" id="DerPaymentResult">
        <result property="paymentId"    column="payment_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="paymentDate"    column="payment_date"    />
        <result property="paymentAmount"    column="payment_amount"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="paymentStatus"    column="payment_status"    />
        <result property="remarks"    column="remarks"    />
        <result property="userId"    column="user_id"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>

    <sql id="selectDerPaymentVo">
        select payment_id, student_name, payment_date, payment_amount, payment_method,
         payment_status, remarks, user_id, dept_id from der_payment resu
    </sql>

    <select id="selectDerPaymentList" parameterType="DerPayment" resultMap="DerPaymentResult">
        <include refid="selectDerPaymentVo"/>
        <where>
            ${params.dataScope}
        </where>
    </select>
    
    <select id="selectDerPaymentByPaymentId" parameterType="Long" resultMap="DerPaymentResult">
        <include refid="selectDerPaymentVo"/>
        where payment_id = #{paymentId}
    </select>
        
    <insert id="insertDerPayment" parameterType="DerPayment" useGeneratedKeys="true" keyProperty="paymentId">
        insert into der_payment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentName != null">student_name,</if>
            <if test="paymentDate != null">payment_date,</if>
            <if test="paymentAmount != null">payment_amount,</if>
            <if test="paymentMethod != null">payment_method,</if>
            <if test="paymentStatus != null">payment_status,</if>
            <if test="remarks != null">remarks,</if>
            <if test="userId != null">user_id,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentName != null">#{studentName},</if>
            <if test="paymentDate != null">#{paymentDate},</if>
            <if test="paymentAmount != null">#{paymentAmount},</if>
            <if test="paymentMethod != null">#{paymentMethod},</if>
            <if test="paymentStatus != null">#{paymentStatus},</if>
            <if test="remarks != null">#{remarks},</if>
            <if test="userId != null">#{userId},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateDerPayment" parameterType="DerPayment">
        update der_payment
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="paymentDate != null">payment_date = #{paymentDate},</if>
            <if test="paymentAmount != null">payment_amount = #{paymentAmount},</if>
            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
            <if test="paymentStatus != null">payment_status = #{paymentStatus},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where payment_id = #{paymentId}
    </update>

    <delete id="deleteDerPaymentByPaymentId" parameterType="Long">
        delete from der_payment where payment_id = #{paymentId}
    </delete>

    <delete id="deleteDerPaymentByPaymentIds" parameterType="String">
        delete from der_payment where payment_id in 
        <foreach item="paymentId" collection="array" open="(" separator="," close=")">
            #{paymentId}
        </foreach>
    </delete>
</mapper>